#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 0) in vec3 aPos;   // Vertex position attribute
layout (location = 1) in vec3 aColor; // Color attribute

out vec3 color; // Output color to fragment shader
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

out vec4 FragPos;  // Output variable to pass the world-space position to the fragment shader

void main()
{
    // Transform the vertex position to clip space
    gl_Position = projection * view * model * vec4(aPos, 1.0);
    color = aColor;
    // Pass the world-space position to the fragment shader
    FragPos = model * vec4(aPos, 1.0);
}
